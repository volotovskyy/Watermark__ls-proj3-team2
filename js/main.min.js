var globalParameters;
globalParameters = {
    mainContainer: $('.work__workplace'),
    watermarkContainer: $('.work__img'),

    //mainContainer: $('.work__img-block'),
    //watermarkContainer: $('.work__watermark-block'),


    mainImageInput: $('#main_img'),
    mainImageInputWrapper: $('#main_img_name'),

    watermarkImageInput: $('#watermark'),
    watermarkImageInputWrapper: $('#watermark-name'),

    classMainImage: 'main-image',
    classWatermarkImage: 'watermark-image',

    buttonResetId: '#reset',
    buttonSubmit: $('#submit'),

    gridClass: '.position__point',

    controlPanel: {

        spiners: {
            $xu: $('#upX'),
            $xd: $('#downX'),
            $yu: $('#upY'),
            $yd: $('#downY')
        },

        inputs: {
            $x: $('#moveX'),
            $y: $('#moveY')
        }
    },

    defaults: {
        transparency: 50,        // persents
        position: [10, 10]
    },

    url: 'php/watermark.php'
};
var Base = (function () {
    var settings = {
            window: {
                size: null
            },

            image: {
                originalSize: {
                    width: 0,
                    height: 0
                },
                scaleSize: {
                    width: 0,
                    height: 0
                },
            },
            scale: 1,

            watermark: {
                originalSize: {
                    width: 0,
                    height: 0
                },
                scaleSize: {
                    width: 0,
                    height: 0
                },
                position: {
                    left: 0,
                    top: 0
                }
            },
            wrapper: {
                size: {
                    width: 0,
                    height: 0
                },
                position: {
                    left: 0,
                    top: 0
                }
            }
        },
        $reset = $(globalParameters.buttonResetId),
        $mainContainer = globalParameters.mainContainer;

    function _initModules () {
        Images.init();
        Slider.init();
        Spiners.init();
        Inputs.init();
        Grid.init();
    }

    function _eventListener() {
        $reset.on('click', _setDefault);
    }

    function _setDefault (e) {
        e.preventDefault();

        var
            pos = globalParameters.defaults.position,
            transparency = globalParameters.defaults.transparency;
        _position(pos);
        Slider.set(transparency);
    }

    var _setSettings = function () {
        settings.window.size = {
            width: $mainContainer.width(),
            height: $mainContainer.height()
        };
    };

    function _position(pos) {
        Position.set(pos);
    }

    var _positionAdd = function (pos) {
        Position.add(pos);
    };

    var _positionChange = function (pos) {
        var position = pos || Position.get();
        Inputs.set(position);
    };

    return {
        init: function () {
            _initModules();
            _eventListener();
            _setSettings();
        },

        event: event,
        settings: settings,

        trigger: function (event, params) {
            switch (event) {
                case 'position:add':
                    _positionAdd(params);
                    break;
                case 'position:change':
                    _positionChange(params);
                    //TODO inputs change
                    break;
            }
        }
    }
}());
var Grid = (function () {
    var class_ = globalParameters.gridClass,
        sizeGrid = {
            col:    3,
            row:    3
        };

    var _setSizeGrid = function(size){
        if(size != undefined && size[0] !== undefined)sizeGrid.col = size[0];
        if(size != undefined && size[1] !== undefined)sizeGrid.row = size[1];
    };

    var _eventListener = function () {
        $(class_).on('click', _click);
    };

    var _click = function (e) {
        var index = $(this).index(),
            centerBlockPosition = _getCenterPositionBlockByIndex(index),
            pos = _watermarkCenterByPosition(centerBlockPosition);

        Position.set(pos);
    };

    var _getCenterPositionBlockByIndex = function (index) {
        var size = Images.getSizeMainImage(),
            block = {
                width: parseInt(size.width) / sizeGrid.col,
                height: parseInt(size.height) / sizeGrid.row,
            },
            hCountBlock = index / sizeGrid.col >> 0, // ÌÓÏÂ ·ÎÓÍ‡ ‚ ÒÚÓÎ·ˆÂ
            wCountBlock = index % sizeGrid.col;      // ÌÓÏÂ ·ÎÓÍ‡ ‚ ÒÚÓÍÂ

        return [
            block.width / 2 + block.width * wCountBlock,
            block.height / 2 + block.height * hCountBlock
        ];
    };

    var _watermarkCenterByPosition = function(pos){
        var size = Images.getSizeWatermark();

        return [
            pos[0] - parseInt(size.width)/2,
            pos[1] - parseInt(size.height)/2
        ]
    };


    return {
        init: function (sizeGrid) {
            _eventListener();
            _setSizeGrid(sizeGrid);
        }
    }
}());

var Images = (function () {
    var
        $imageName = globalParameters.mainImageInputWrapper,
        $watermarkName = globalParameters.watermarkImageInputWrapper,

        $inputImage1 = globalParameters.mainImageInput,
        $inputImage2 = globalParameters.watermarkImageInput,

        $submit = globalParameters.buttonSubmit;

    function _eventListener() {
        $inputImage1.on('change', _loadMainImage);
        $inputImage2.on('change', _loadWatermark);

        $submit.on('click', _save);
    }

    function _changeFileUploadImage() {
        var filepath = $inputImage1.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $imageName.val(filepath);
    }

    function _changeFileUploadWatermark() {
        var filepath = $inputImage2.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $watermarkName.val(filepath)
    }

    var _loadImg = function (e, callback) {
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            var file = e.target.files[0];

            if (!file.type.match('image.*')) {
                alert('–û—à–∏–±–∫–∞. –¢–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è!');
                //TODO type error message
                return;
            }

            var reader = new FileReader();

            reader.onload = (function (f) {
                return callback;
            })(file);

            reader.readAsDataURL(file);
        } else {
            alert('The File APIs are not fully supported in this browser.');
            //TODO  exit message
        }
    };


    var _setBackGround = function (image, $contaitener, class_) {
        var
            url = 'url(' + image + ')';

        Scale.mainImage(image, function () {
            $contaitener.css('background-image', url);
            Scale.scaleWatermark();
            Position.refresh();
        });


    };

    function _setImageWatermark(image, $contaitener, class_) {
        var $img = $('<img class="' + class_ + '">');

        $contaitener
            .find('.' + class_)
            .remove();

        $contaitener.append($img);

        Scale.watermark(image, function () {
            $img.attr('src', image);
        });

        _setWatermarkSettings($img);
    }

    function _setWatermarkSettings($img){
        Transparency.init($img);
        _addDragAndDrop($img);
        _inputWatermarkEnable();
    }

    function _addDragAndDrop($img) {
        $img.draggable({
            stop: function () {
                var pos = Position.get();

                Position.set(pos);
            }
        });
    }

    function _inputWatermarkEnable () {
        var
            input = globalParameters.watermarkImageInput,
            wrapper = globalParameters.watermarkImageInputWrapper;

        input.prop('disabled', false);
        wrapper.prop('disabled', false);
    }

    function _loadMainImage(e) {
        _loadImg(e, function (e) {
            var $container = globalParameters.mainContainer,
                class_ = globalParameters.classMainImage,
                image = e.target.result;
            _setBackGround(image, $container, class_);
        });
        _changeFileUploadImage();
    }

    function _loadWatermark(e) {
        _loadImg(e, function (e) {
            var $container = globalParameters.watermarkContainer,
                class_ = globalParameters.classWatermarkImage,
                image = e.target.result;

            _setImageWatermark(image, $container, class_);
        });
        _changeFileUploadWatermark();
    }

    function _save (e) {
        e.preventDefault();
        var fd = new FormData,
            url = globalParameters.url,
            opacity = Slider.get(),
            position = Position.get();

        if ($inputImage1.prop('files').length === 0 || $inputImage2.prop('files').length === 0) {
            alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
            //TODO print message
            return;
        }

        fd.append('img1', $inputImage1.prop('files')[0]);
        fd.append('img2', $inputImage2.prop('files')[0]);
        fd.append('opacity', opacity);
        fd.append('positionX', position[0]);
        fd.append('positionY', position[1]);

        $.ajax({
            url: url,
            data: fd,
            processData: false,
            contentType: false,
            type: 'POST',
            success: function (data) {
                console.log('success');
                console.log(data);
            },
            error: function (e) {
                console.log('error');
                console.log(e);
            }
        })
    }

    return {

        init: function () {
            _eventListener();
        },

        getSizeMainImage: function () {
            return {
                width: Base.settings.wrapper.size.width,
                height: Base.settings.wrapper.size.height
            }
        },

        getSizeWatermark: function(){
            return {
                width: Base.settings.watermark.scaleSize.width,
                height: Base.settings.watermark.scaleSize.height
            }
        }

    }
}());
var Inputs = (function () {
    var
        $x = globalParameters.controlPanel.inputs.$x,
        $y = globalParameters.controlPanel.inputs.$y;

    var _eventListener = function () {

        $x.on('keyup',function(){
            var position = [$x.val()];
            Position.set(position);

        });

        $y.on('keyup',function(){
            var position = [undefined, $y.val()];
            Position.set(position);
        });

    };

    return {

        init: function () {
            this.set([0, 0]);
            _eventListener();
        },

        set: function (position) {
            if(position[0] !== undefined)$x.val(position[0]);
            if(position[1] !== undefined)$y.val(position[1]);
        }

    }
}());
var Position = (function () {
    var
        imageClass = '.' + globalParameters.classWatermarkImage,
        defPosition = globalParameters.defaults.position,
        $container = globalParameters.watermarkContainer;

    var _getBorderPosition = function () {
        var $image = $(imageClass),
            width = $image.width(),
            heigth = $image.height(),
            widthContainer = $container.width(),
            heightContainer = $container.height();

        return [
            widthContainer - width,
            heightContainer - heigth
        ]
    };

    var _validPosition = function (pos) {
        var borders = _getBorderPosition(),
            x = pos[0],
            y = pos[1];

        if (x !== undefined){
            x = parseInt(x);
            x = x > borders[0] ? borders[0] : x;
            x = x > 0 ? x : 0;
        }

        if (y !== undefined){
            y = parseInt(y);
            y = y > borders[1] ? borders[1] : y;
            y = y > 0 ? y : 0;
        }

        return [x, y];
    };

    return {
        setDefault: function () {
            this.set(defPosition[0], defPosition[1]);
        },

        set: function (pos) {
            var
                $image = $(imageClass),
                position = $image.position();

            if (position === undefined) return;

            pos = _validPosition(pos);
            var x = pos[0],
                y = pos[1];

            if (x !== undefined){
                $image.css('left', x);
            }
            if (y !== undefined){
                $image.css('top', y);
            }

            Base.trigger('position:change', pos);
        },

        add: function (pos) {
            var
                $image = $(imageClass),
                addX = pos[0],
                addY = pos[1],
                position = $image.position();

            if (position === undefined) return;

            var
                x = parseInt(position.left),
                y = parseInt(position.top);

            if (addX)x += addX;
            if (addY)y += addY;

            this.set([x, y]);
        },

        refresh: function(){
          this.add([0,0]);
        },

        get: function () {
            var
                $image = $(imageClass),
                position = $image.position();

            return [position.left,position.top];
        }
    }
}());
var Scale = (function () {
    function setScaleWaterMark(image, callback) {
        var img = new Image();

        img.onload = function () {
            Base.settings.watermark.originalSize.width = this.width;
            Base.settings.watermark.originalSize.height = this.height;

            scaleWatermark(callback);
        };

        img.src = image;

    };

    function scaleWatermark(callback){
        var
            $image = $('.' + globalParameters.classWatermarkImage),
            scale = Base.settings.scale,
            width = Base.settings.watermark.originalSize.width,
            height = Base.settings.watermark.originalSize.height;

        if(width > 0 && height > 0){
            width = Base.settings.watermark.scaleSize.width = Math.floor(width/scale);
            height = Base.settings.watermark.scaleSize.height = Math.floor(height/scale);

            $image.width(width);
            $image.height(height);
        }
        if(callback)callback();
    }

    function _Scale(image, name, containerSize, callback) {
        var img = new Image();

        img.onload = function () {
            var width = this.width,
                height = this.height,
                scale = 1;


            if (containerSize.width < width || containerSize.height < height) {
                var scaleW = width / containerSize.width,
                    scaleH = height / containerSize.height;

                scale = scaleW > scaleH ? scaleW : scaleH;
            }

            Base.settings.scale = scale;
            var
                widthS = Math.floor(width / scale),
                heightS = Math.floor(height / scale);
            Base.settings[name].size.width = widthS;
            Base.settings[name].size.height = heightS;
            Base.settings[name].position.left = center(containerSize.width, widthS);
            Base.settings[name].position.top = center(containerSize.height, heightS);

            callback(Base.settings[name]);
        };

        img.src = image;
    }


    function center(wrapp, inner) {
        return Math.floor((wrapp - inner) / 2);
    }

    function setScaleMainImage(image, callback) {
        var
            $watermarkContainer = globalParameters.watermarkContainer,
            $mainContainer = globalParameters.mainContainer,
            name = 'wrapper';

        _Scale(image, name, Base.settings.window.size, function (image) {
            var
                size = image.size,
                bs = size.width + 'px ' + size.height + 'px';

            $mainContainer.css('background-size', bs);

            $watermarkContainer.width(size.width);
            $watermarkContainer.height(size.height);
            $watermarkContainer.css('left', image.position.left);
            $watermarkContainer.css('top', image.position.top);

            callback();
        });

    }


    return {
        mainImage: setScaleMainImage,
        watermark: setScaleWaterMark,
        scaleWatermark: scaleWatermark
    }
}());
var Slider = (function () {
    var $slider;

    var _initPlugin = function () {
        $slider = $(".opacity__slider");

        $slider.slider({
            range: "min",
            value: globalParameters.defaults.transparency,
            min: 1,
            max: 100,
            slide: function (event, ui) {
                Transparency.set(ui.value);
            }
        });
    };

    return {
        init: function () {
            _initPlugin();
        },

        set: function (val) {
            $slider.slider('value', val);
        },

        get: function(){
            return $slider.slider('value');
        }
    }
}());
var Spiners = (function () {
    var
        $xu = globalParameters.controlPanel.spiners.$xu,
        $xd = globalParameters.controlPanel.spiners.$xd,
        $yu = globalParameters.controlPanel.spiners.$yu,
        $yd = globalParameters.controlPanel.spiners.$yd
        ;

    var _eventListener = function () {

        $xu.on('click', function(){
            Base.trigger('position:add', [1, 0]);

        });

        $xd.on('click', function(){
            Base.trigger('position:add', [-1, 0]);

        });

        $yu.on('click', function(){
            Base.trigger('position:add', [0, 1]);

        });

        $yd.on('click', function(){
            Base.trigger('position:add', [0, -1]);

        });
    };

    return {
        init: function () {
            _eventListener();
        }
    }
}());
var Transparency = (function () {
    var lastPercent = globalParameters.defaults.transparency,
        $img;

    var _setTransparency = function (percent) {
        if (percent === undefined)percent = lastPercent;

        var $image = $('.' + globalParameters.classWatermarkImage),
            opacity = percent / 100;

        $image.css('opacity',opacity);

        lastPercent = percent;
    };

    return {
        set: _setTransparency,
        init: function($image){
            $img = $image;
            _setTransparency();
        }
    }
}());


$(function () {
    Base.init();

});

