var globalParameters = {
    mainContainer:              $('.work__workplace'),
    watermarkContainer:         $('.work__img'),
    mainImageInput:             $('#main_img'),
    mainImageInputWrapper:             $('#main_img_name'),
    watermarkImageInput:        $('#watermark'),
    watermarkImageInputWrapper: $('#watermark-name'),

    classMainImage:             'main-image',
    classWatermarkImage:        'watermark-image',

    defaults:   {
        transparency: 50        // persents
    }
};
var Base = (function () {
    var _data = {
            mainImage: {
                width: 0,
                height: 0
            }
        },
        $inputImage1 = globalParameters.mainImageInput,
        $inputImage2 = globalParameters.watermarkImageInput
        ;

    var _eventListener = function () {
        $inputImage1.on('change', LoadImages.loadMainImage);
        $inputImage2.on('change', LoadImages.loadWatermark);
    };

    var _initModules = function () {
        LoadImages.init();
        ControlPanel.init();
    };

    var _setDefault = function () {
    };


    var _loadMainImage = function () {
        _inputWatermarkEnable();
        Scale.mainImage();
    };

    var _loadWaterMark = function () {
        Scale.watermark();
        _transparency();
    };

    var _inputWatermarkEnable = function () {
        var
            input = globalParameters.watermarkImageInput,
            wrapper = globalParameters.watermarkImageInputWrapper;

        input.prop('disabled', false);
        wrapper.prop('disabled', false);
    };

    var _scale = function () {
        Scale.go();
    };

    var _transparency = function (percent) {
        Transparency.set(percent);
    };

    var _position = function (params) {

    };

    return {
        init: function () {
            _eventListener();
            _initModules();
            _setDefault();
        },

        trigger: function (event, params) {
            switch (event) {
                case 'loadMainImage':
                    _loadMainImage();
                    break;
                case 'loadWatermark':
                    _loadWaterMark();
                    break;
                case 'scale':
                    _scale();
                    break;
                case 'transparency':
                    _transparency(params);
                    break;
                case 'position':
                    _position(params);
                    break;
            }
        }
    }
}());
var ControlPanel = (function(){
    var _initModules = function(){
        Slider.init();
    };

    return {
        init: function(){
            _initModules();
        }
    }
}());
var LoadImages = (function () {
    var
        $image = globalParameters.mainImageInput,
        $imageName = globalParameters.mainImageInputWrapper,
        $watermark = globalParameters.watermarkImageInput,
        $watermarkName = globalParameters.watermarkImageInputWrapper;

    var _eventListener = function () {
        $image.on('change', _changeFileUploadImage);
        $watermark.on('change', _changeFileUploadWatermark);
    };

    var _changeFileUploadImage = function () {
        console.log('change');
        var filepath = $image.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $imageName.val(filepath);
    };

    var _changeFileUploadWatermark = function () {
        var filepath = $watermark.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $watermarkName.val(filepath)
    };

    var _loadImg = function (e, func) {
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            var file = e.target.files[0];

            if (!file.type.match('image.*')) {
                alert('Ошибка. Только изображения!');
                //TODO type error message
                return;
            }

            var reader = new FileReader();

            reader.onload = (function (f) {
                return func;
            })(file);

            reader.readAsDataURL(file);
        } else {
            alert('The File APIs are not fully supported in this browser.');
            //TODO  exit message
        }
    };


    var _setBackGround = function (image, $contaitener, class_) {
        var img = document.createElement('img'),
            url = 'url(' + image + ')';

        $contaitener
            .css('background-image', url)
            .append(img)
            .find('.' + class_)
            .remove();

        $(img)
            .one('load', function () {
                Base.trigger('loadMainImage');
            })
            .attr('src', image)
            .addClass(class_);
    };

    var _setImage = function (image, $contaitener, class_) {
        var img = document.createElement('img');

        $contaitener
            .append(img)
            .find('.' + class_)
            .remove();

        $(img)
            .one('load', function () {
                Base.trigger('loadWatermark');
            })
            .attr('src', image)
            .addClass(class_);

    };

    return {
        loadMainImage: function (e) {
            _loadImg(e, function (e) {
                var $container = globalParameters.mainContainer,
                    class_ = globalParameters.classMainImage,
                    image = e.target.result;

                _setBackGround(image, $container, class_);
            });

        },
        loadWatermark: function (e) {
            _loadImg(e, function (e) {
                var $container = globalParameters.watermarkContainer,
                    class_ = globalParameters.classWatermarkImage,
                    image = e.target.result;

                _setImage(image, $container, class_);
            });
        },
        init: function () {
            _eventListener();
        }
    }
}());
var Scale = (function () {
    var mainImage = {
        width: 0,
        height: 0,
        left: 0,
        top: 0
    };

    var _setScaleWaterMark = function () {
        var $container = globalParameters.watermarkContainer,
            $image = $('.' + globalParameters.classWatermarkImage);

        //$image
        //    .css('top', paddingTop)
        //    .css('left', paddingLeft);
    };

    var _setScaleMainImage = function () {

        var $container = globalParameters.mainContainer,
            $watermarkContainer = globalParameters.watermarkContainer,
            $image = $('.' + globalParameters.classMainImage);


        if($image.width() > $image.height()){
            $image.width($container.width());
        }else{
            $image.height($container.height());
        }


        $watermarkContainer
            .css('top', ($container.height() - $image.height()) / 2)
            .css('left',  ($container.width() - $image.width()) / 2)
            .width($image.width())
            .height($image.height());
    };

    return {
        mainImage: _setScaleMainImage,
        watermark: _setScaleWaterMark
    }
}());
var Slider = (function () {
    var _initPlugin = function () {
        $(".opacity__slider").slider({
            range: "min",
            value: globalParameters.defaults.transparency,
            min: 1,
            change:_change,
            max: 100,
            slide: function (event, ui) {
                $("#amount").val("$" + ui.value);
            }
        });
    };

    var _change = function(e,slider){
        Base.trigger('transparency',slider.value)
    };

    var _eventListener = function () {
    };

    return {
        init: function () {
            _initPlugin();
            //_eventListener();
        }
    }
}());
var Transparency = (function () {
    var lastPercent = globalParameters.defaults.transparency;

    var _setTransparency = function (percent) {
        if (percent === undefined)percent = lastPercent;

        var $image = $('.' + globalParameters.classWatermarkImage),
            opacity = percent / 100;

        $image.css('opacity',opacity);

        lastPercent = percent;
    };

    return {
        set: _setTransparency
    }
}());

// opacity slider
$(function () {

    Base.init();

});

