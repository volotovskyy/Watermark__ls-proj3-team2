var globalParameters = {
    mainContainer:              $('.work__workplace'),
    watermarkContainer:         $('.work__img'),

    mainImageInput:             $('#main_img'),
    mainImageInputWrapper:      $('#main_img_name'),

    watermarkImageInput:        $('#watermark'),
    watermarkImageInputWrapper: $('#watermark-name'),

    classMainImage:             'main-image',
    classWatermarkImage:        'watermark-image',


    controlPanel:{

        spiners:{
            $xu:                $('#upX'),
            $xd:                $('#downX'),
            $yu:                $('#upY'),
            $yd:                $('#downY')
        },

        inputs:{
            $x:                 $('#moveX'),
            $y:                 $('#moveY')
        }
    },

    defaults:   {
        transparency: 50,        // persents
        position:     [100,10]
    }
};
var Base = (function () {

    var _initModules = function () {
        LoadImages.init();
        ControlPanel.init();
    };

    var _setDefault = function () {
        //TODO set default
    };

    var _loadMainImage = function () {
        _inputWatermarkEnable();
        Scale.mainImage();
    };

    var _loadWaterMark = function () {
        Scale.watermark();
        _transparency();
        _addDragAndDrop();
    };

    var _addDragAndDrop = function(){
        $('.watermark-image').draggable({
            stop: function(){
                var position = Position.get(),
                    pos = [position.left,position.top];

                Base.trigger('position:set',pos);
            }
        });
    };

    var _inputWatermarkEnable = function () {
        var
            input = globalParameters.watermarkImageInput,
            wrapper = globalParameters.watermarkImageInputWrapper;

        input.prop('disabled', false);
        wrapper.prop('disabled', false);
    };

    var _transparency = function (percent) {
        Transparency.set(percent);
    };

    var _position = function (pos) {
        Position.set(pos);
    };

    var _positionAdd = function (pos) {
        Position.add(pos);
    };

    var _positionChange = function (pos) {
        var position = pos || Position.get();
        Inputs.set(position);
    };

    return {
        init: function () {
            _initModules();
            _setDefault();
        },

        trigger: function (event, params) {
            switch (event) {
                case 'loadMainImage':
                    _loadMainImage();
                    break;
                case 'loadWatermark':
                    _loadWaterMark();
                    break;
                case 'transparency':
                    _transparency(params);
                    break;
                case 'position:set':
                    _position(params);
                    break;
                case 'position:add':
                    _positionAdd(params);
                    break;
                case 'position:change':
                    _positionChange(params);
                    //TODO inputs change
                    break;
            }
        }
    }
}());
var ControlPanel = (function () {
    var _initModules = function () {
        Slider.init();
        Spiners.init();
        Inputs.init();
    };

    return {
        init: function () {
            _initModules();
        }
    }
}());
var Inputs = (function () {
    var
        $x = globalParameters.controlPanel.inputs.$x,
        $y = globalParameters.controlPanel.inputs.$y;

    var _eventListener = function () {

        $x.on('keyup',function(){
            var position = [$x.val()];
            Base.trigger('position:set',position);
        });

        $y.on('keyup',function(){
            var position = [undefined, $y.val()];
            Base.trigger('position:set',position);
        });

    };

    return {

        init: function () {
            this.set([0, 0]);
            _eventListener();
        },

        set: function (position) {
            $x.val(position[0]);
            $y.val(position[1]);
        }

    }
}());
var LoadImages = (function () {
    var
        $image = globalParameters.mainImageInput,
        $imageName = globalParameters.mainImageInputWrapper,
        $watermark = globalParameters.watermarkImageInput,
        $watermarkName = globalParameters.watermarkImageInputWrapper,
        $inputImage1 = globalParameters.mainImageInput,
        $inputImage2 = globalParameters.watermarkImageInput;

    var _eventListener = function () {
        $image.on('change', _changeFileUploadImage);
        $watermark.on('change', _changeFileUploadWatermark);

        $inputImage1.on('change', _loadMainImage);
        $inputImage2.on('change', _loadWatermark);
    };

    var _changeFileUploadImage = function () {
        var filepath = $image.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $imageName.val(filepath);
    };

    var _changeFileUploadWatermark = function () {
        var filepath = $watermark.val();

        filepath = filepath.replace(/c:\\fakepath\\/gmi, "");
        $watermarkName.val(filepath)
    };

    var _loadImg = function (e, func) {
        if (window.File && window.FileReader && window.FileList && window.Blob) {
            var file = e.target.files[0];

            if (!file.type.match('image.*')) {
                alert('Ошибка. Только изображения!');
                //TODO type error message
                return;
            }

            var reader = new FileReader();

            reader.onload = (function (f) {
                return func;
            })(file);

            reader.readAsDataURL(file);
        } else {
            alert('The File APIs are not fully supported in this browser.');
            //TODO  exit message
        }
    };


    var _setBackGround = function (image, $contaitener, class_) {
        var img = document.createElement('img'),
            url = 'url(' + image + ')';

        $contaitener
            .css('background-image', url)
            .append(img)
            .find('.' + class_)
            .remove();

        $(img)
            .one('load', function () {
                Base.trigger('loadMainImage');
            })
            .attr('src', image)
            .addClass(class_);
    };

    var _setImage = function (image, $contaitener, class_) {
        var img = document.createElement('img');

        $contaitener
            .append(img)
            .find('.' + class_)
            .remove();

        $(img)
            .one('load', function () {
                Base.trigger('loadWatermark');
            })
            .attr('src', image)
            .addClass(class_);

    };

    var _loadMainImage = function (e) {
        _loadImg(e, function (e) {
            var $container = globalParameters.mainContainer,
                class_ = globalParameters.classMainImage,
                image = e.target.result;

            _setBackGround(image, $container, class_);
        });

    };

    var
        _loadWatermark = function (e) {
            _loadImg(e, function (e) {
                var $container = globalParameters.watermarkContainer,
                    class_ = globalParameters.classWatermarkImage,
                    image = e.target.result;

                _setImage(image, $container, class_);
            });
        };

    return {

        init: function () {
            _eventListener();
        }
    }
}());
var Position = (function () {
    var
        imageClass = '.' + globalParameters.classWatermarkImage,
        defPosition = globalParameters.defaults.position,
        $container = globalParameters.watermarkContainer;

    var _getBorderPosition = function () {
        var $image = $(imageClass),
            width = $image.width(),
            heigth = $image.height(),
            widthContainer = $container.width(),
            heightContainer = $container.height();

        return [
            widthContainer - width,
            heightContainer - heigth
        ]
    };

    var _validPosition = function (pos) {
        var borders = _getBorderPosition(),
            x = pos[0],
            y = pos[1];

        x = x > borders[0] ? borders[0] : x;
        y = y > borders[1] ? borders[1] : y;
        x = x > 0 ? x : 0;
        y = y > 0 ? y : 0;

        return [x, y];
    };

    return {
        setDefault: function () {
            this.set(defPosition[0], defPosition[1]);
        },

        set: function (pos) {
            var
                $image = $(imageClass),
                x = pos[0],
                y = pos[1],
                position = $image.position();

            if (position === undefined) return;

            var
                y = parseInt(y),
                x = parseInt(x),
                pos = _validPosition([x, y]);

            $image.css('left', pos[0]);
            $image.css('top', pos[1]);

            Base.trigger('position:change',pos);
        },

        add: function (pos) {
            var
                $image = $(imageClass),
                addX = pos[0],
                addY = pos[1],
                position = $image.position();

            if (position === undefined) return;

            var
                x = parseInt(position.left),
                y = parseInt(position.top);

            if (addX)x += addX;
            if (addY)y += addY;

            this.set([x, y]);
        },

        get: function(){
            var
                $image = $(imageClass);

            return $image.position();
        }
    }
}());
var Scale = (function () {
    var mainImage = {
        width: 0,
        height: 0,
        left: 0,
        top: 0
    };

    var _setScaleWaterMark = function () {
        var $container = globalParameters.watermarkContainer,
            $image = $('.' + globalParameters.classWatermarkImage);

        //$image
        //    .css('top', paddingTop)
        //    .css('left', paddingLeft);
    };

    var _setScaleMainImage = function () {

        var $container = globalParameters.mainContainer,
            $watermarkContainer = globalParameters.watermarkContainer,
            $image = $('.' + globalParameters.classMainImage);


        if($image.width() > $image.height()){
            $image.width($container.width());
        }else{
            $image.height($container.height());
        }


        $watermarkContainer
            .css('top', ($container.height() - $image.height()) / 2)
            .css('left',  ($container.width() - $image.width()) / 2)
            .width($image.width())
            .height($image.height());
    };

    return {
        mainImage: _setScaleMainImage,
        watermark: _setScaleWaterMark
    }
}());
var Slider = (function () {
    var _initPlugin = function () {
        $(".opacity__slider").slider({
            range: "min",
            value: globalParameters.defaults.transparency,
            min: 1,
            change:_change,
            max: 100,
            slide: function (event, ui) {
                $("#amount").val("$" + ui.value);
            }
        });
    };

    var _change = function(e,slider){
        Base.trigger('transparency',slider.value)
    };

    var _eventListener = function () {
    };

    return {
        init: function () {
            _initPlugin();
            //_eventListener();
        }
    }
}());
var Spiners = (function () {
    var
        $xu = globalParameters.controlPanel.spiners.$xu,
        $xd = globalParameters.controlPanel.spiners.$xd,
        $yu = globalParameters.controlPanel.spiners.$yu,
        $yd = globalParameters.controlPanel.spiners.$yd
        ;

    var _eventListener = function () {

        $xu.on('click', function(){
            Base.trigger('position:add', [1, 0]);

        });

        $xd.on('click', function(){
            Base.trigger('position:add', [-1, 0]);

        });

        $yu.on('click', function(){
            Base.trigger('position:add', [0, 1]);

        });

        $yd.on('click', function(){
            Base.trigger('position:add', [0, -1]);

        });
    };

    return {
        init: function () {
            _eventListener();
        }
    }
}());
var Transparency = (function () {
    var lastPercent = globalParameters.defaults.transparency;

    var _setTransparency = function (percent) {
        if (percent === undefined)percent = lastPercent;

        var $image = $('.' + globalParameters.classWatermarkImage),
            opacity = percent / 100;

        $image.css('opacity',opacity);

        lastPercent = percent;
    };

    return {
        set: _setTransparency
    }
}());

// opacity slider
$(function () {

    Base.init();

});

